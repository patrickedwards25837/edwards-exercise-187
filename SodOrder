//Author: Patrick Edwards
//Course: CPT 187
//Purpose: Education
//CreateDate: Dec 4, 2019

package edu.cpt187.edwards.participation;

public class SodOrder 
{
	private final double ZERO_TOTAL = 0.0;
	private final double TAX_RATE = .075;
	private int[] itemCounts;
	private int[] discountCounts;
	private int[] prizeCounts;
	private char discountType = ' ';
	private String itemName = "";
	private double itemPrice = 0.0;
	private String discountName = "";
	private double discountRate = 0.0;
	private int howMany = 0;
	private int lastItemSelectedIndex = 0;
	private String prizeName = "";

	public SodOrder()
	{

	}//End SodOrder Constructor

	public void setItemCountArray(int borrowedRecordCount)
	{
		if (itemCounts == null || borrowedRecordCount > itemCounts.length)
		{
			itemCounts = new int[borrowedRecordCount];
		}//End if itemCounts == null || borrowedRecordCount > itemCounts.length decision

	}//End setItemCountArray

	public void setItemSelection(int borrowedSearchIndex)
	{
		lastItemSelectedIndex = borrowedSearchIndex;
	}//End setItemSelection

	public void setItemName(String[] borrowedItemNames)
	{
		itemName = borrowedItemNames[lastItemSelectedIndex];
		itemCounts[lastItemSelectedIndex]++;
	}//End setItemName

	public void setItemPrice(double[] borrowedItemPrices)
	{
		itemPrice = borrowedItemPrices[lastItemSelectedIndex];
	}//End setItemPrice

	public void setHowMany(int borrowedHowMany)
	{
		howMany = borrowedHowMany;
	}//End setHowMany

	public void setDiscountType(char borrowedMenuSelection)
	{
		discountType = borrowedMenuSelection;
	}//End setDiscountType

	public void setDiscountName(String[] borrowedDiscountNames)
	{
		if (discountCounts == null)
		{
			discountCounts = new int[borrowedDiscountNames.length];
		}//End if discountCounts == null decision

		if (discountType == 'A')
		{
			discountName = borrowedDiscountNames[0];
			discountCounts[0]++;
		}
		else if (discountType == 'B')
		{
			discountName = borrowedDiscountNames[1];
			discountCounts[1]++;
		}
		else
		{
			discountName = borrowedDiscountNames[2];
			discountCounts[2]++;
		}//End if discountType == 'A' decision

	}//End setDiscountName

	public void setDiscountRate(double[] borrowedDiscountRates)
	{
		if (discountType == 'A')
		{
			discountRate = borrowedDiscountRates[0];
		}
		else if (discountType == 'B')
		{
			discountRate = borrowedDiscountRates[1];
		}
		else
		{
			discountRate = borrowedDiscountRates[2];
		}//End if discountType == 'A' decision

	}//End setDiscountRate

	public void setPrizeName(String[] borrowedPrizeNames, int borrowedRandomNumber)
	{
		if (prizeCounts == null)
		{
			prizeCounts = new int[borrowedPrizeNames.length];
		}//End if prizeCounts.length == 0 decision

		prizeName = borrowedPrizeNames[borrowedRandomNumber];
		prizeCounts[borrowedRandomNumber]++;

	}//End setPrizeName

	public void setDecreaseInStock(Inventory borrowedInventoryObject)
	{
		borrowedInventoryObject.setReduceStock(howMany);
	}//End setDecreaseInStock

	public int getInStockCount(int[] borrowedInStockCounts)
	{
		return borrowedInStockCounts[lastItemSelectedIndex];
	}//End getInStockCount

	public int getItemID(int[] borrowedItemIDs)
	{
		return borrowedItemIDs[lastItemSelectedIndex];
	}//End getItemID

	public String getItemName()
	{
		return itemName;
	}//End getItemName

	public double getItemPrice()
	{
		return itemPrice;
	}//End getItemPrice

	public int[] getItemCounts()
	{
		return itemCounts;
	}//End getItemCounts

	public int getHowMany()
	{
		return howMany;
	}//End getHowMany

	public String getDiscountName()
	{
		return discountName;
	}//End getDiscountName

	public double getDiscountRate()
	{
		return discountRate;
	}//End getDiscountRate

	public int[] getDiscountCounts()
	{
		return discountCounts;
	}//End getDiscountCounts

	public double getDiscountAmt()
	{
		return itemPrice * discountRate;
	}//End getDiscountAmt

	public double getDiscountPrice()
	{
		return itemPrice - getDiscountAmt();
	}//End getDiscountPrice

	public String getPrizeName()
	{
		return prizeName;
	}//End getPrizeName

	public int[] getPrizeCounts()
	{
		return prizeCounts;
	}//End getPrizeCounts

	public double getSubTotal()
	{
		if (getDiscountRate() > ZERO_TOTAL)
		{
			return getHowMany() * getDiscountPrice();
		}
		else
		{
			return getHowMany() * getItemPrice();
		}//End if getDiscountRate() > ZERO_TOTAL decision

	}//End getSubTotal

	public double getTaxRate()
	{
		return TAX_RATE;
	}//End getTaxRate

	public double getTaxAmt()
	{
		return getSubTotal() * getTaxRate();
	}//End getTaxAmt

	public double getTotalCost()
	{
		if (discountType == ' ')
		{
			return ZERO_TOTAL;
		}
		else
		{
			return getSubTotal() + getTaxAmt();
		}//End if discountType == ' ' decision

	}//End getTotalCost

}//End SodOrder Class
